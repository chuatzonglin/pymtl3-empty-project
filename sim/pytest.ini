# File: pymtl.ini
# Project: sim
# Created Date: 2022-10-17 16:10:14
# Author: Kuroba
# Description: 
# -----
# Last Modified: 2022-10-17 17:08:18
# Modified By: 
# -----
# MIT License
# Copyright (c) 2022 Kuroba
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# -----
# HISTORY:
# Date      	By	Comments
# ----------	---	----------------------------------------------------------
# 2022-10-17	TL	Taken from tutorial
# 

#=========================================================================
# pytest.ini
#=========================================================================
# Configuration file for py.test.

[pytest]

#-------------------------------------------------------------------------
# configure test collection
#-------------------------------------------------------------------------
# We explicitly do not set a pattern for collecting python classes
# yet. This avoids collecting TestHarness which we use in many of our
# PyMTL unit tests, but eventually we will need to decide on a
# replacement.

python_files     = *_test.py
python_classes   =
python_functions = test test_*

#-------------------------------------------------------------------------
# default commandline arguments
#-------------------------------------------------------------------------
# By default do not show any traceback. This means by deafult py.test
# gives an overview of the results but not any details. Users can use
# --tb=long to get more information on a failing test. We also display
# error/warnings at the end; otherwise syntax errors won't really show
# up.

addopts = --tb=long -v -r Ew

